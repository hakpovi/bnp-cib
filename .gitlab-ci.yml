image: "maven:3.8-jdk-11" 
services:
  - docker:dind

stages:
  - build-backend
  - deploy-backend
  - test-backend
  - build-database

build-jar-file:
  stage: build-backend
  script:
    - mvn clean install 
    - mvn package
 
  artifacts:
        paths:
            -  target/*.jar

build-backend-image-&push:
  services:
    - docker:dind
  image: docker:dind
  stage: build-backend
  variables:
    BACKEND_TAG: "v1"
    DOCKER_REPO: "hakpovi"
  dependencies: 
    - build-jar-file
    
  script:
    
    - docker build -t spring-boot-backend:v1 .  
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
    - docker tag spring-boot-backend:$BACKEND_TAG $DOCKER_REPO/spring-boot-backend:$BACKEND_TAG 
    - docker push $DOCKER_REPO/spring-boot-backend:$BACKEND_TAG  

run-docker-container:
  stage: test-backend
  services:
    - docker:dind
  image: docker:dind
  variables:
    POSTGRES_TAG: "cib"
    DOCKER_REPO: "hakpovi"
  dependencies:
    - build-docker-image-&push
  script:
    - docker run  -d $DOCKER_REPO/spring-boot-backend:v1
    #- curl -vvv http://localhost:8090 > curl-result.txt
    #- cat curl-result.txt
    
  #only:
   # - master
  #only: [] 


build-deploy-database:
  stage: build-database
  image: docker:dind
  variables:
    DOCKER_REPO: "hakpovi"
    POSTGRES_TAG: "cib"
  services:
    - docker:dind

  script:
    - cd database
    - docker build -t postgres-sql:$POSTGRES_TAG .
    - docker tag postgres-sql:$POSTGRES_TAG $DOCKER_REPO/postgres-sql:$POSTGRES_TAG
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker push $DOCKER_REPO/postgres-sql:$POSTGRES_TAG




